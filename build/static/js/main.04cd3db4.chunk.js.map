{"version":3,"sources":["components/store/apiReq.js","components/store/jokeSlice.js","components/styles.jsx","components/pages/Home.jsx","components/elements/ImageCard.jsx","components/elements/JokeCard.jsx","components/containers/JokeContent.jsx","components/containers/JokeFooter.jsx","components/pages/Jokes.jsx","components/elements/FavCard.jsx","components/pages/Favorite.jsx","App.js","index.js"],"names":["jokesAPIPageNumber","isRequestInProgress","fetchJokesFromAPI","a","fetch","headers","Accept","response","json","data","next_page","total_pages","results","console","warn","fetchImage","images","jokeSlice","createSlice","name","initialState","jokes","favorites","swipeDirection","page","hasBackgroundImage","hasLocalStorage","reducers","appendJokes","state","payload","push","invertBoolean","setPage","setSwipeDirection","onFavDelete","splice","findIndex","item","id","onSwipe","joke","position","shift","pop","setStateFromLocalStorage","pageNo","Boolean","actions","fetchJokeAsync","dispatch","getState","length","image1","image2","FlexRowCenter","styled","div","FlexColumnCenter","Label","label","SplashScreen","AppNameHolder","h1","AppDescriptionHolder","AppNameLetter","animated","span","appName","Home","useSelector","useDispatch","useTrail","left","trail","setTrail","useEffect","setTimeout","map","props","i","style","charAt","type","size","onClick","margin","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","checked","BackgroundColorCard","color1","color2","Image","img","React","memo","isComponentUnmounted","useRef","useState","src","setSrc","image","current","url","getImage","randomcolor","alt","MainCard","JokeText","SwipeText","direction","LikeIconHolder","FaHeart","AnimatedCard","AnimatedSwipeCard","jokeText","styles","setDirection","useSpring","movementX","setSpring","bind","useDrag","down","swipe","movement","getDirection","swipeStatus","directionSign","angle","getSwipeStatus","axis","transform","interpolate","value","Math","abs","OfflineMessageHolder","JokeContent","transitions","useTransition","slice","card","from","opacity","leave","reverse","key","FooterContainer","ButtonHolder","color","large","AnimatedMdClose","MdClose","AnimatedFaHeart","JokeFooter","leftToggle","setLeftToggle","rightToggle","setRightToggle","rejectProps","scale","config","duration","acceptProps","toggle","clickHandler","useCallback","throttle","event","target","closest","dataset","leading","trailing","data-type","range","output","x","JokeContainer","Jokes","FavJokeCard","DeleteIconHolder","FavCard","FavoriteMenu","FavoriteContainer","NoFavoriteMessage","Favorite","Container","height","App","useWindowHeight","useBeforeunload","localStorage","setItem","JSON","stringify","removeItem","getItem","parse","getPage","store","configureStore","reducer","jokeReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04cd3db4.chunk.js","sourcesContent":["export let jokesAPIPageNumber = 1;\r\nlet isRequestInProgress = false;\r\n\r\nexport function setJokesAPIPageNumber(pageNo) {\r\n  jokesAPIPageNumber = pageNo;\r\n}\r\n\r\nexport async function fetchJokesFromAPI() {\r\n  if (!isRequestInProgress) {\r\n    try {\r\n      const response = await fetch(`https://icanhazdadjoke.com/search?page=${jokesAPIPageNumber}`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      jokesAPIPageNumber = data.next_page !== data.total_pages ? data.next_page : 1;\r\n      return data.results;\r\n    } catch (error) {\r\n      console.warn(error);\r\n      return null;\r\n    } finally {\r\n      isRequestInProgress = false;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function fetchImage() {\r\n  try {\r\n    const response = await fetch(\"https://source.unsplash.com/random/400x600\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.warn(error);\r\n    return null;\r\n  }\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setJokesAPIPageNumber, fetchJokesFromAPI, fetchImage } from \"./apiReq\";\r\n\r\nexport const images = [];\r\nconst jokesLoadingThreshHold = 4; // Make requests when remaining jokes are less than this count\r\n\r\nconst jokeSlice = createSlice({\r\n  name: \"jokes\",\r\n  initialState: {\r\n    jokes: [],\r\n    favorites: [],\r\n    swipeDirection: \"\",\r\n    page: \"HOME\",\r\n    hasBackgroundImage: true,\r\n    hasLocalStorage: true,\r\n  },\r\n  reducers: {\r\n    appendJokes: (state, { payload }) => {\r\n      state.jokes.push(...payload);\r\n    },\r\n    invertBoolean: (state, { payload }) => {\r\n      state[payload] = !state[payload];\r\n    },\r\n    setPage: (state, { payload }) => {\r\n      state.page = payload;\r\n    },\r\n    setSwipeDirection: (state, { payload }) => {\r\n      state.swipeDirection = payload;\r\n    },\r\n    onFavDelete: (state, { payload }) => {\r\n      state.favorites.splice(\r\n        state.favorites.findIndex((item) => item.id === payload),\r\n        1\r\n      );\r\n    },\r\n    onSwipe: (state, { payload }) => {\r\n      if (state.swipeDirection === \"RIGHT\") {\r\n        const position = state.favorites.findIndex((joke) => joke.id === payload);\r\n        if (position === -1) {\r\n          state.favorites.push(state.jokes[0]);\r\n        }\r\n      } else {\r\n        const position = state.favorites.findIndex((joke) => joke.id === payload);\r\n        if (position !== -1) {\r\n          state.favorites.splice(position, 1);\r\n        }\r\n      }\r\n\r\n      state.jokes.shift();\r\n      state.swipeDirection = \"\";\r\n      images.pop();\r\n    },\r\n    setStateFromLocalStorage: (state, { payload }) => {\r\n      state.jokes = payload.jokes;\r\n      state.favorites = payload.favorites ?? [];\r\n      state.hasBackgroundImage = Boolean(payload.hasBackgroundImage);\r\n      state.hasLocalStorage = Boolean(payload.hasLocalStorage);\r\n      setJokesAPIPageNumber(payload.jokesAPIPageNumber);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { appendJokes, invertBoolean, setPage, setSwipeDirection, onFavDelete, onSwipe, setStateFromLocalStorage } = jokeSlice.actions;\r\nexport default jokeSlice.reducer;\r\n\r\nexport const fetchJokeAsync = () => async (dispatch, getState) => {\r\n  const state = getState();\r\n  if (state.jokes.length < jokesLoadingThreshHold) {\r\n    const jokes = await fetchJokesFromAPI();\r\n    if (jokes) {\r\n      dispatch(appendJokes(jokes));\r\n    }\r\n  }\r\n};\r\n\r\n// Load 2 images eagerly\r\n(async function loadInitialImage() {\r\n  const image1 = await fetchImage();\r\n  const image2 = await fetchImage();\r\n  if (image1 && image2) {\r\n    images.push(image1, image2);\r\n  }\r\n})();\r\n","import styled from \"styled-components\";\r\n\r\nexport const FlexRowCenter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const FlexColumnCenter = styled(FlexRowCenter)`\r\n  flex-direction: column;\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animated, useTrail } from \"react-spring\";\r\nimport { Button, Switch } from \"antd\";\r\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\r\n\r\nimport { FlexRowCenter, FlexColumnCenter } from \"../styles\";\r\nimport { setPage, invertBoolean } from \"../store/jokeSlice\";\r\n\r\nconst Label = styled.label`\r\n  margin: 10px;\r\n`;\r\n\r\nconst SplashScreen = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  text-align: center;\r\n  height: 100%;\r\n  background: linear-gradient(180deg, rgba(253, 41, 123, 1) 0%, rgba(255, 88, 100, 1) 100%);\r\n  color: white;\r\n`;\r\n\r\nconst AppNameHolder = styled.h1`\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 3rem;\r\n  color: white;\r\n`;\r\n\r\nconst AppDescriptionHolder = styled.div`\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst AppNameLetter = animated(\r\n  styled.span`\r\n    position: relative;\r\n  `\r\n);\r\n\r\nconst appName = \"'Fun'der\";\r\nconst description = \"A tinder styled joke application\";\r\n\r\nexport default function Home() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [trail, setTrail] = useTrail(appName.length, () => ({\r\n    left: 1500,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTrail({\r\n        left: 0,\r\n      });\r\n    }, 0);\r\n  }, [setTrail]);\r\n\r\n  function letsFunderClickHandler() {\r\n    dispatch(setPage(\"JOKES\"));\r\n  }\r\n\r\n  return (\r\n    <SplashScreen>\r\n      <AppNameHolder>\r\n        {trail.map((props, i) => (\r\n          <AppNameLetter key={i} style={props}>\r\n            {appName.charAt(i)}\r\n          </AppNameLetter>\r\n        ))}\r\n        <AppDescriptionHolder>{description}</AppDescriptionHolder>\r\n        <FlexRowCenter>\r\n          <Button type=\"primary\" size=\"large\" onClick={letsFunderClickHandler} style={{ margin: \"10px\" }}>\r\n            Lets funder\r\n          </Button>\r\n        </FlexRowCenter>\r\n      </AppNameHolder>\r\n      <FlexColumnCenter>\r\n        <FlexRowCenter>\r\n          <Label>Display background images</Label>\r\n          <Switch\r\n            checkedChildren={<CheckOutlined />}\r\n            unCheckedChildren={<CloseOutlined />}\r\n            checked={state.hasBackgroundImage}\r\n            onClick={() => dispatch(invertBoolean(\"hasBackgroundImage\"))}\r\n          />\r\n        </FlexRowCenter>\r\n        <FlexRowCenter>\r\n          <Label>Save liked jokes in browser</Label>\r\n          <Switch\r\n            checkedChildren={<CheckOutlined />}\r\n            unCheckedChildren={<CloseOutlined />}\r\n            checked={state.hasLocalStorage}\r\n            onClick={() => dispatch(invertBoolean(\"hasLocalStorage\"))}\r\n          />\r\n        </FlexRowCenter>\r\n      </FlexColumnCenter>\r\n    </SplashScreen>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport randomcolor from \"randomcolor\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { images } from \"../store/jokeSlice\";\r\nimport { fetchImage } from \"../store/apiReq\";\r\n\r\nconst BackgroundColorCard = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  text-shadow: 2px 2px 4px black;\r\n  background: linear-gradient(180deg, ${(props) => props.color1} 0%, ${(props) => props.color2} 100%);\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.8;\r\n  -webkit-user-drag: none;\r\n`;\r\n\r\nexport default React.memo(function ImageCard({ hasBackgroundImage }) {\r\n  const isComponentUnmounted = useRef(false);\r\n  const [src, setSrc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let image;\r\n    async function getImage() {\r\n      image = images.pop() ?? (await fetchImage());\r\n      if (image && !isComponentUnmounted.current) {\r\n        setSrc(image.url);\r\n      } else if (image) {\r\n        images.push(image);\r\n      }\r\n    }\r\n\r\n    if (hasBackgroundImage) {\r\n      isComponentUnmounted.current = false;\r\n      getImage();\r\n    }\r\n\r\n    return () => {\r\n      isComponentUnmounted.current = true;\r\n      images.push(image);\r\n    };\r\n  }, [hasBackgroundImage]);\r\n\r\n  return (\r\n    <BackgroundColorCard color1={randomcolor()} color2={randomcolor()}>\r\n      {src && <Image src={src} alt=\"random background for joke\" />}\r\n    </BackgroundColorCard>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\nimport { useDrag } from \"react-use-gesture\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { setSwipeDirection, onSwipe } from \"../store/jokeSlice\";\r\nimport { FlexColumnCenter } from \"../styles\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst MainCard = styled(FlexColumnCenter)`\r\n  margin: 10px 5px;\r\n  padding: 10px;\r\n  box-shadow: 5px 0 40px 0 rgba(0, 0, 0, 0.15);\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  position: absolute;\r\n  margin: auto;\r\n  user-select: none;\r\n  touch-action: none;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst JokeText = styled.div`\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 2rem;\r\n  -webkit-text-stroke-width: 1.5px;\r\n  -webkit-text-stroke-color: black;\r\n  text-align: center;\r\n  max-height: 100%;\r\n  position: absolute;\r\n  padding: 10px;\r\n  text-shadow: 2px 2px 4px black;\r\n  touch-action: pan-y;\r\n  overflow: auto;\r\n\r\n  &&::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SwipeText = styled.div`\r\n  color: ${(props) => (props.direction === \"LEFT\" ? \"red\" : \"lightgreen\")};\r\n  border: 6px solid currentColor;\r\n  font-size: 3rem;\r\n  transform: rotate(-30deg);\r\n  font-weight: 600;\r\n  background: rgba(0, 0, 0, 0.25);\r\n  padding: 0 15px;\r\n`;\r\n\r\nconst LikeIconHolder = styled(FaHeart)`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  font-size: 2rem;\r\n  z-index: 1;\r\n  color: red;\r\n  stroke: #fff;\r\n  stroke-width: 1rem;\r\n`;\r\n\r\nfunction getSwipeStatus(directionSign, movementX) {\r\n  const angle = movementX / 10;\r\n  if (directionSign === -1 || angle < -25) {\r\n    return \"LEFT\";\r\n  } else if (directionSign === 1 || angle > 25) {\r\n    return \"RIGHT\";\r\n  }\r\n  return \"\";\r\n}\r\n\r\nfunction getDirection(movementX) {\r\n  if (movementX < -30) {\r\n    return \"LEFT\";\r\n  } else if (movementX > 30) {\r\n    return \"RIGHT\";\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nconst AnimatedCard = animated(MainCard);\r\n\r\nexport default function JokeCard({ jokeText, styles, id }) {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [direction, setDirection] = useState(\"\");\r\n\r\n  const [{ movementX }, setSpring] = useSpring(() => ({\r\n    movementX: 0,\r\n  }));\r\n\r\n  // Functionality implements drag behavior of the card\r\n  const bind = useDrag(\r\n    ({ down, swipe: [direction], movement: [movementX] }) => {\r\n      setSpring({ movementX });\r\n      setDirection(getDirection(movementX));\r\n\r\n      // Perform actions when mouse up or touch completion\r\n      if (!down) {\r\n        const swipeStatus = getSwipeStatus(direction, movementX);\r\n        if (swipeStatus) {\r\n          movementX = swipeStatus === \"LEFT\" ? movementX - 100 : movementX + 100;\r\n          dispatch(setSwipeDirection(swipeStatus));\r\n        } else {\r\n          movementX = 0;\r\n          setDirection(swipeStatus);\r\n        }\r\n\r\n        setSpring({ movementX });\r\n      }\r\n    },\r\n    // Allow swipe and drag only on x axis\r\n    { axis: \"x\" }\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Emulate the swipe like behavior when user click on like or dislike button on only top card\r\n    if (id === state.jokes[0]?.id && state.swipeDirection) {\r\n      setDirection(state.swipeDirection);\r\n      setSpring({ movementX: state.swipeDirection === \"LEFT\" ? -250 : 250 });\r\n      dispatch(onSwipe(id));\r\n    }\r\n  }, [state.swipeDirection, dispatch, setSpring, id, state.jokes]);\r\n\r\n  return (\r\n    <AnimatedCard\r\n      {...bind()}\r\n      style={{\r\n        ...styles,\r\n        transform: movementX.interpolate((value) => `translate(${value}px, ${Math.abs(value) / 10}px) rotate(${value / 10}deg)`),\r\n      }}\r\n    >\r\n      <ImageCard hasBackgroundImage={state.hasBackgroundImage} />\r\n      <JokeText>{jokeText}</JokeText>\r\n      {state.favorites.findIndex((item) => item.id === id) !== -1 && <LikeIconHolder />}\r\n      {direction === \"LEFT\" && <SwipeText direction={direction}>NOPE</SwipeText>}\r\n      {direction === \"RIGHT\" && <SwipeText direction={direction}>LIKE</SwipeText>}\r\n    </AnimatedCard>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { animated, useTransition } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { fetchJokeAsync } from \"../store/jokeSlice\";\r\nimport { FlexColumnCenter } from \"../styles\";\r\nimport JokeCard from \"../elements/JokeCard\";\r\n\r\nconst AnimatedSwipeCard = animated(JokeCard);\r\nconst OfflineMessageHolder = styled(FlexColumnCenter)`\r\n  height: 100%;\r\n  font-size: 2rem;\r\n  color: white;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default function JokeContent() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  function retryHandler() {\r\n    dispatch(fetchJokeAsync());\r\n  }\r\n\r\n  const transitions = useTransition(state.jokes.slice(0, 2), (card) => card?.id, {\r\n    from: { opacity: \"1\" },\r\n    leave: { opacity: \"0\" },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.length === 0 ? (\r\n        <OfflineMessageHolder>\r\n          Check your internet connectivity\r\n          <Button type=\"primary\" size=\"large\" onClick={retryHandler}>\r\n            Retry\r\n          </Button>\r\n        </OfflineMessageHolder>\r\n      ) : (\r\n        transitions.reverse().map(({ item, props, key }) => <AnimatedSwipeCard key={key} id={item.id} styles={props} jokeText={item?.joke} />)\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { throttle } from \"lodash\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setPage, setSwipeDirection } from \"../store/jokeSlice\";\r\n\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport { BiListCheck } from \"react-icons/bi\";\r\n\r\nconst FooterContainer = styled.div`\r\n  display: flex;\r\n  margin: 10px 0;\r\n  height: 80px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ButtonHolder = styled.div`\r\n  border-radius: 50%;\r\n  background-color: white;\r\n  border: 8px solid lightgrey;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${(props) => props.color};\r\n  margin: 0 -4px;\r\n  height: ${(props) => (props.large ? \"80px\" : \"60px\")};\r\n  width: ${(props) => (props.large ? \"80px\" : \"60px\")};\r\n  font-size: ${(props) => (props.large ? \"2rem\" : \"1.5rem\")};\r\n`;\r\n\r\nconst AnimatedMdClose = animated(MdClose);\r\nconst AnimatedFaHeart = animated(FaHeart);\r\n\r\nexport default function JokeFooter() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [leftToggle, setLeftToggle] = useState(false);\r\n  const [rightToggle, setRightToggle] = useState(false);\r\n\r\n  const rejectProps = useSpring({ scale: leftToggle ? 0 : 1, config: { duration: 1000 } });\r\n  const acceptProps = useSpring({ scale: rightToggle ? 0 : 1, config: { duration: 1000 } });\r\n\r\n  useEffect(() => {\r\n    if (state.swipeDirection === \"LEFT\") {\r\n      setLeftToggle((toggle) => !toggle);\r\n    } else if (state.swipeDirection === \"RIGHT\") {\r\n      setRightToggle((toggle) => !toggle);\r\n    }\r\n  }, [state.swipeDirection]);\r\n\r\n  const clickHandler = useCallback(\r\n    throttle(\r\n      (event) => {\r\n        const type = event.target.closest(\"[data-type]\").dataset.type;\r\n        if (type === \"HOME\") {\r\n          dispatch(setPage(\"HOME\"));\r\n        } else if (type === \"FAVORITE\") {\r\n          dispatch(setPage(\"FAVORITE\"));\r\n        } else if (type === \"REJECT\") {\r\n          dispatch(setSwipeDirection(\"LEFT\"));\r\n        } else if (type === \"ACCEPT\") {\r\n          dispatch(setSwipeDirection(\"RIGHT\"));\r\n        }\r\n      },\r\n      500,\r\n      { leading: true, trailing: false }\r\n    ),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <FooterContainer onClick={clickHandler}>\r\n      <ButtonHolder data-type=\"HOME\" color=\"orange\">\r\n        <AiFillHome />\r\n      </ButtonHolder>\r\n      <ButtonHolder data-type=\"REJECT\" color=\"red\" large>\r\n        <AnimatedMdClose\r\n          style={{\r\n            transform: rejectProps.scale\r\n              .interpolate({\r\n                range: [0, 0.25, 0.5, 0.75, 1],\r\n                output: [1, 1.5, 1, 1.5, 1],\r\n              })\r\n              .interpolate((x) => `scale(${x})`),\r\n          }}\r\n        />\r\n      </ButtonHolder>\r\n      <ButtonHolder data-type=\"ACCEPT\" color=\"green\" large>\r\n        <AnimatedFaHeart\r\n          style={{\r\n            transform: acceptProps.scale\r\n              .interpolate({\r\n                range: [0, 0.25, 0.5, 0.75, 1],\r\n                output: [1, 1.5, 1, 1.5, 1],\r\n              })\r\n              .interpolate((x) => `scale(${x})`),\r\n          }}\r\n        />\r\n      </ButtonHolder>\r\n      <ButtonHolder data-type=\"FAVORITE\" color=\"blue\">\r\n        <BiListCheck />\r\n      </ButtonHolder>\r\n    </FooterContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport JokeContent from \"../containers/JokeContent\";\r\nimport JokeFooter from \"../containers/JokeFooter\";\r\n\r\nconst JokeContainer = styled.div`\r\n  box-shadow: 5px 0 30px 0 rgba(0, 0, 0, 0.2);\r\n  margin: auto;\r\n  min-height: 300px;\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  position: relative;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport default function Jokes() {\r\n  return (\r\n    <>\r\n      <JokeContainer>\r\n        <JokeContent />\r\n      </JokeContainer>\r\n      <JokeFooter />\r\n    </>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { onFavDelete } from \"../store/jokeSlice\";\r\n\r\nconst FavJokeCard = styled.div`\r\n  font-size: 1rem;\r\n  padding: 10px;\r\n  box-shadow: 0 5px 30px 0 rgba(0, 0, 0, 0.15);\r\n  margin: 10px;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  position: relative;\r\n`;\r\n\r\nconst DeleteIconHolder = styled.div`\r\n  text-align: right;\r\n  font-size: 1.2rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\nexport default function FavCard({ data }) {\r\n  const dispatch = useDispatch();\r\n\r\n  function deleteClickHandler() {\r\n    dispatch(onFavDelete(data.id));\r\n  }\r\n\r\n  return (\r\n    <FavJokeCard>\r\n      <div>{data.joke}</div>\r\n      <DeleteIconHolder>\r\n        <AiFillDelete onClick={deleteClickHandler} />\r\n      </DeleteIconHolder>\r\n    </FavJokeCard>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { setPage } from \"../store/jokeSlice\";\r\nimport FavCard from \"../elements/FavCard\";\r\nimport { FlexRowCenter, FlexColumnCenter } from \"../styles\";\r\n\r\nconst FavoriteMenu = styled(FlexRowCenter)`\r\n  background-color: #fd2c7a;\r\n  position: sticky;\r\n  padding: 10px;\r\n  top: 0;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FavoriteContainer = styled.div`\r\n  overflow-y: auto;\r\n  height: 100%;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NoFavoriteMessage = styled(FlexColumnCenter)`\r\n  height: 100%;\r\n  font-size: 2rem;\r\n  color: white;\r\n  font-weight: 600;\r\n  padding: 10px;\r\n`;\r\n\r\nexport default function Favorite() {\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  function clickHandler(page) {\r\n    dispatch(setPage(page));\r\n  }\r\n\r\n  return (\r\n    <FavoriteContainer>\r\n      <FavoriteMenu>\r\n        <Button type=\"primary\" size=\"large\" onClick={() => clickHandler(\"HOME\")} style={{ margin: \"0 10px\" }}>\r\n          Home\r\n        </Button>\r\n        <Button type=\"primary\" size=\"large\" onClick={() => clickHandler(\"JOKES\")}>\r\n          Jokes\r\n        </Button>\r\n      </FavoriteMenu>\r\n      {state.favorites.length === 0 ? (\r\n        <NoFavoriteMessage>You have not liked any jokes yet</NoFavoriteMessage>\r\n      ) : (\r\n        state.favorites.map((card) => <FavCard key={card?.id} data={card} />)\r\n      )}\r\n    </FavoriteContainer>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport { useWindowHeight } from \"@react-hook/window-size\";\nimport styled from \"styled-components\";\n\nimport { setStateFromLocalStorage, fetchJokeAsync } from \"./components/store/jokeSlice\";\nimport { jokesAPIPageNumber } from \"./components/store/apiReq\";\n\nimport Home from \"./components/pages/Home\";\nimport Jokes from \"./components/pages/Jokes\";\nimport Favorite from \"./components/pages/Favorite\";\n\nconst Container = styled.div`\n  height: ${(props) => props.height + \"px\"};\n  width: 100%;\n  max-width: 400px;\n  margin: auto;\n  box-shadow: 0 10px 50px 0 rgba(0, 0, 0, 0.25);\n  overflow: hidden;\n  background: linear-gradient(180deg, rgba(253, 41, 123, 1) 0%, rgba(255, 88, 100, 1) 100%);\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default function App() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const height = useWindowHeight();\n\n  useBeforeunload(() => {\n    localStorage.setItem(\"jokes\", JSON.stringify(state.jokes));\n    localStorage.setItem(\"hasBackgroundImage\", state.hasBackgroundImage);\n    localStorage.setItem(\"hasLocalStorage\", state.hasLocalStorage);\n    localStorage.setItem(\"jokesAPIPageNumber\", jokesAPIPageNumber);\n\n    if (state.hasLocalStorage) {\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    } else {\n      localStorage.removeItem(\"favorites\");\n    }\n  });\n\n  useEffect(() => {\n    if (localStorage.getItem(\"jokes\")) {\n      dispatch(\n        setStateFromLocalStorage({\n          jokes: JSON.parse(localStorage.getItem(\"jokes\")),\n          favorites: JSON.parse(localStorage.getItem(\"favorites\")),\n          hasBackgroundImage: JSON.parse(localStorage.getItem(\"hasBackgroundImage\")),\n          hasLocalStorage: JSON.parse(localStorage.getItem(\"hasLocalStorage\")),\n          jokesAPIPageNumber: JSON.parse(localStorage.getItem(\"jokesAPIPageNumber\")),\n        })\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchJokeAsync());\n  }, [state.jokes, dispatch]);\n\n  function getPage() {\n    switch (state.page) {\n      case \"HOME\":\n        return <Home />;\n      case \"JOKES\":\n        return <Jokes />;\n      case \"FAVORITE\":\n        return <Favorite />;\n      default:\n        return <Home />;\n    }\n  }\n\n  return <Container height={height}>{getPage()}</Container>;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport jokeReducer from \"./components/store/jokeSlice\";\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst store = configureStore({\n  reducer: jokeReducer,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}